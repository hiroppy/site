---
import type JobMeta from "hiroppy/generated/jobs.json";
import Image from "./Image.astro";
import { formatDate } from "../utils/formatDate";
import Youtube from "./icons/Youtube.astro";
import SnsIcon from "./SnsIcon.astro";
import Pencil from "./icons/Pencil.astro";
import { marked } from "marked";

type JobContent = (typeof JobMeta)["main"] | (typeof JobMeta)["side"];

type Props = {
  title: "Main Job" | "Side Job";
  items: JobContent;
  meta: (typeof JobMeta)["meta"];
};

const { title, items, meta } = Astro.props;
const history: JobContent = [];

for (const item of items) {
  // TODO:
  // @ts-expect-error
  history.push({
    ...item,
    description: await marked.parse(item.description),
  });
}
---

<div class="space-y-4">
  <h3 class="font-semibold">{title}</h3>
  {
    history.map(
      ({ name, company, description, start, end, position, links }) => (
        <div class="flex items-start gap-4 break-all">
          {(meta as any)[company] && (
            <Image
              src={(meta as any)[company].image}
              alt={name}
              width={60}
              height={60}
              className="rounded w-16 h-16 bg-white"
            />
          )}
          <div class="w-full space-y-2">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
              <h4 class="font-semibold text-blue-400 hover:text-blue-300">
                <a href={(meta as any)[company].url} target="_blank">
                  {name}
                </a>
              </h4>
              <span
                class={[
                  "text-xs",
                  end === null ? "text-blue-300" : "text-gray-400",
                ].join(" ")}
              >
                {formatDate(new Date(start))} ~{" "}
                {end ? formatDate(new Date(end)) : ""}
              </span>
            </div>
            <span class="rounded-full bg-gray-700 px-2 py-1 text-xs font-semibold">
              {position}
            </span>
            <div
              class="job-history text-sm text-gray-400"
              set:html={description}
            />
            <ul class="flex items-center gap-2">
              {links.map(({ siteUrl: url }) => (
                <li>
                  {url.startsWith("https://www.youtube.com/") ? (
                    <SnsIcon href={url} name="youtube">
                      <Youtube />
                    </SnsIcon>
                  ) : (
                    <SnsIcon href={url} name="link">
                      <Pencil />
                    </SnsIcon>
                  )}
                </li>
              ))}
            </ul>
          </div>
        </div>
      ),
    )
  }
  <slot />
</div>
<style is:global>
  .job-history ul li {
    margin-left: 8px;
  }

  .job-history a {
    text-decoration: underline;
  }

  .job-history a:hover {
    color: #93c5fd;
  }
</style>

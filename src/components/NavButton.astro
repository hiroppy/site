---
import { getExternalLinkProps } from "../utils/linkUtils";

type Props = {
  variant?: "default" | "active" | "mobile" | "mobile-active";
  class?: string;
  href?: string;
  target?: string;
  rel?: string;
  ariaLabel?: string;
  id?: string;
};

const {
  variant = "default",
  class: className = "",
  href,
  target,
  rel,
  ariaLabel,
  id,
} = Astro.props;

const baseStyles =
  "relative rounded-md font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2";

const variants = {
  default:
    "px-3 py-2 text-sm text-gray-700 hover:text-blue-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-gray-700",
  active:
    "px-3 py-2 text-sm bg-blue-100 text-blue-700 dark:bg-blue-900/50 dark:text-blue-300",
  mobile:
    "block px-3 py-2 text-base text-gray-700 hover:text-blue-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-blue-400 dark:hover:bg-gray-700",
  "mobile-active":
    "block px-3 py-2 text-base bg-blue-100 text-blue-700 dark:bg-blue-900/50 dark:text-blue-300",
};

const classes = `${baseStyles} ${variants[variant]} ${className}`;
const Tag = href ? "a" : "button";
const externalLinkProps = href ? getExternalLinkProps(href, target, rel) : {};

const props = {
  id,
  class: classes,
  ...(href && { href }),
  ...externalLinkProps,
  ...(ariaLabel && { "aria-label": ariaLabel }),
};
---

<Tag {...props}>
  <slot />
</Tag>

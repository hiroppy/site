---
import Card from "./Card.astro";
import CardContent from "./CardContent.astro";
import { cn } from "../utils/cn";

type Props = {
  color: `bg-${string}`;
  title: string;
  items: {
    title: string;
    from: number;
    to?: number;
  }[];
};

const { color, title, items } = Astro.props;
const currentYear = new Date().getFullYear();
---

<div class="space-y-4">
  <div class="mb-4 flex items-center space-x-3">
    <div class={cn("h-3 w-3 rounded-full", color)}></div>
    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">
      {title}
    </h3>
  </div>
  <div class="grid gap-3 sm:grid-cols-2">
    {
      items.map(({ title, from, to }) => {
        const isActive = !to;
        const endYear = to || currentYear;
        const years = endYear - from;
        return (
          <Card class="group shadow-sm transition-all duration-300 hover:shadow-md">
            <CardContent class="p-3">
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h4 class="font-medium text-gray-900 dark:text-gray-100">
                    {title}
                  </h4>
                  <div class="mt-1 flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400">
                    <span>
                      {from} - {to || "Present"}
                    </span>
                    <span class="text-gray-300 dark:text-gray-600">â€¢</span>
                    <span>
                      {years} year{years !== 1 ? "s" : ""}
                    </span>
                  </div>
                </div>
                {isActive && (
                  <div class="ml-2 flex-shrink-0">
                    <div class="h-2 w-2 animate-pulse rounded-full bg-green-500" />
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        );
      })
    }
  </div>
</div>

---
import { cn } from "../utils/cn";
import { formatDate } from "../utils/formatDate";

type Props = {
  start: string | Date;
  end?: string | Date | null;
  class?: string;
  showCurrentIndicator?: boolean;
  variant?: "badge" | "text";
};

const {
  start,
  end,
  class: className,
  showCurrentIndicator = false,
  variant = "badge",
} = Astro.props;

const isActive = end === null || end === undefined;

// Format dates if they are Date objects, otherwise use strings as-is
const formatValue = (value: string | Date) => {
  if (value instanceof Date) {
    return formatDate(value);
  }
  return value;
};

const startText = formatValue(start);
const endText = end ? formatValue(end) : "Present";
---

<div class={cn("flex items-center space-x-2", className)}>
  <span
    class={cn(
      "inline-flex items-center text-xs font-medium",
      variant === "badge" && "rounded-full px-3 py-1",
      variant === "badge" && isActive
        ? "bg-green-100 text-green-900 dark:bg-green-900/30 dark:text-green-400"
        : variant === "badge"
          ? "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300"
          : isActive
            ? "text-green-800 dark:text-green-400"
            : "text-gray-500 dark:text-gray-400",
    )}
  >
    {startText} - {endText}
  </span>
  {
    isActive && showCurrentIndicator && (
      <div class="flex items-center space-x-1 text-xs text-green-800 dark:text-green-400">
        <div class="h-2 w-2 animate-pulse rounded-full bg-green-500" />
        <span>Current</span>
      </div>
    )
  }
</div>

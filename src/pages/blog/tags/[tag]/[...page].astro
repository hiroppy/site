---
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import BlogListLayout from "../../../../layouts/BlogListLayout.astro";
import { getAllTags, getBlogs, parseTags } from "../../../../utils/blog";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getBlogs();
  const tags = getAllTags(posts);

  return tags
    .map((tag) =>
      paginate(
        posts.filter((post) =>
          parseTags(post.data.tags).some((current) => current === tag),
        ),
        {
          params: { tag },
          pageSize: 20,
        },
      ),
    )
    .flat();
}

const allPosts = await getBlogs();
const allTags = getAllTags(allPosts);
const { tag } = Astro.params;
const { page } = Astro.props as {
  page: Page<CollectionEntry<"blog">>;
};
---

<BlogListLayout
  title={`Tech Blog: ${tag}`}
  page={page}
  allTags={allTags}
  currentTag={tag}
  showSearch={false}
>
  <div slot="header">
    <!-- Additional Header Info -->
    <div class="mb-8 text-center">
      <p class="mx-auto max-w-2xl text-xl text-gray-600 dark:text-gray-300">
        「{tag}」に関連する記事一覧（{page.data.length}件）
      </p>
    </div>
  </div>

  <span slot="empty-message">「{tag}」タグに関連する記事がありません</span>
</BlogListLayout>

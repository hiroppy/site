---
import Layout from "../layouts/Layout.astro";
import HeroSection from "../components/HeroSection.astro";
import Section from "../components/Section.astro";
import CTASection from "../components/CTASection.astro";
import Card from "../components/Card.astro";
import CardContent from "../components/CardContent.astro";
import CardTitle from "../components/CardTitle.astro";
import Avatar from "../components/Avatar.astro";
import Image from "../components/Image.astro";
import Button from "../components/Button.astro";
import Icon from "../components/Icon.astro";
import Hatena from "../components/icons/Hatena.astro";
import Link from "../components/Link.astro";
import GitHubStats from "../components/GitHubStats.astro";
import meImage from "../assets/images/meta/me.png";
import articles from "../../node_modules/hiroppy/generated/articles.json";
import sponsors from "../../node_modules/hiroppy/generated/sponsors.json";
import repos from "../../node_modules/hiroppy/generated/repos.json";
import meta from "../../node_modules/hiroppy/generated/meta.json";
import { getStarCount } from "../utils/github";
import { getBookmark } from "../utils/hatena";
import { getLanguageColorClass } from "../utils/languageColors";

const hotArticles = articles.filter(({ hot }) => !!hot);
const articlesWithBookmarks = await Promise.all(
  hotArticles.map(async (article) => ({
    ...article,
    bookmark: await getBookmark(article.url),
  })),
);

const reposWithStars = await Promise.all(
  repos.hot.map(async (repo) => {
    const [, , , owner, repoName] = repo.url.split("/");
    return {
      ...repo,
      stars: await getStarCount(owner, repoName),
    };
  }),
);
---

<Layout>
  <main class="container mx-auto space-y-12 px-4 py-8">
    <!-- Hero Section -->
    <HeroSection
      title="Welcome to hiroppy's site 👋"
      avatar={meImage}
      socialLinks={{
        twitter: meta.sns.twitter,
        github: meta.sns.github,
        linkedin: meta.sns.linkedin,
      }}
    />

    <!-- Popular Articles Section -->
    <Section title="Popular Articles">
      <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          articlesWithBookmarks.map(({ url, title, image, bookmark }) => (
            <Card
              link={{ href: url }}
              class="group card-lift flex h-full flex-col border-0 bg-white shadow-lg dark:bg-slate-800"
            >
              <div class="relative overflow-hidden rounded-t-lg">
                <Image
                  src={image}
                  class="card-image-zoom h-32 w-full object-cover"
                  alt={title}
                  width={300}
                  height={160}
                  lazy={false}
                />
              </div>
              <CardContent class="flex flex-grow flex-col p-4">
                <CardTitle
                  level={3}
                  class="mb-2 flex-grow text-lg leading-relaxed"
                >
                  {title}
                </CardTitle>
                <div class="mt-auto flex items-center justify-end text-sm text-gray-500 dark:text-gray-400">
                  <Hatena />
                  <span data-testid="bookmark-count" class="ml-1">
                    {bookmark}
                  </span>
                </div>
              </CardContent>
            </Card>
          ))
        }
      </div>
    </Section>
    <!-- Top Repositories Section -->
    <Section title="Top Repositories">
      <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
        {
          reposWithStars.map(
            ({ name, image, description, url, language, stars }) => (
              <Card
                link={{ href: url }}
                class="group card-lift border-0 bg-white shadow-lg dark:bg-slate-800"
              >
                <CardContent class="p-4">
                  <div class="flex gap-3">
                    <Avatar size="sm">
                      <Image
                        src={image}
                        class="h-full w-full object-cover"
                        alt={name}
                        width={32}
                        height={32}
                      />
                    </Avatar>
                    <div class="min-w-0 flex-1">
                      <CardTitle level={3} class="mb-2 text-lg leading-relaxed">
                        {name}
                      </CardTitle>
                      <p class="mb-3 line-clamp-2 text-sm text-gray-600 dark:text-gray-300">
                        {description}
                      </p>
                      <div class="flex items-center justify-between text-sm">
                        <GitHubStats
                          type="star"
                          count={stars}
                          class="text-gray-500 dark:text-gray-400"
                        />
                        <div class="flex items-center gap-1 text-gray-500 dark:text-gray-400">
                          <div
                            class={`${getLanguageColorClass(language)} h-2 w-2 rounded-full`}
                          />
                          <span class="text-xs">{language}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ),
          )
        }
      </div>
    </Section>
    <!-- GitHub Sponsors Section -->
    <CTASection
      title="Thank you for your support!"
      icon="mdi:heart"
      gradientFrom="from-purple-600"
      gradientTo="to-purple-700"
      class="px-2 md:px-8 dark:from-purple-700 dark:to-purple-800"
    >
      <div class="flex flex-wrap justify-center gap-3">
        {
          [...sponsors.current, ...sponsors.past].map(
            ({ name, href, avatar }) => (
              <Link
                href={
                  href?.includes("https://docs.github.com/sponsors")
                    ? "https://github.com"
                    : (href ?? "https://github.com")
                }
                ariaLabel={name === undefined ? "private user" : undefined}
              >
                <Avatar
                  size="lg"
                  class="ring-2 ring-white/30 transition-all duration-200 hover:ring-white/60"
                >
                  <Image
                    src={avatar ?? ""}
                    alt={name ?? "private user"}
                    class="h-full w-full object-cover"
                    width={48}
                    height={48}
                  />
                </Avatar>
              </Link>
            ),
          )
        }
      </div>
    </CTASection>

    <!-- Company CTA Section -->
    <CTASection
      title="合同会社Coder Penguin"
      icon="mdi:office-building"
      gradientFrom="from-blue-600"
      gradientTo="to-blue-700"
      class="dark:from-blue-700 dark:to-blue-800"
    >
      <div slot="description" class="text-xl text-blue-100 dark:text-blue-200">
        <p>技術顧問、エンジニア組織、採用支援を行う会社を運営しています。</p>
        <p>
          開発も空き状況によっては可能なので、お気軽にお問い合わせください。
        </p>
      </div>
      <div class="mt-6">
        <Link href={meta.form.request}>
          <Button
            variant="outline"
            class="border-white bg-white text-blue-700 hover:border-blue-200 hover:bg-blue-50 hover:text-blue-800 dark:border-white dark:bg-white dark:text-blue-700 dark:hover:border-blue-200 dark:hover:bg-blue-50 dark:hover:text-blue-800"
          >
            <Icon
              icon="mdi:email-outline"
              class="mr-2"
              width="20"
              height="20"
            />
            お問い合わせ
          </Button>
        </Link>
      </div>
    </CTASection>
  </main>
</Layout>

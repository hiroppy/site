---
import Layout from "../layouts/Layout.astro";
import MainLayout from "../layouts/MainLayout.astro";
import data from "../../generated/jobs.json";

type Date = `${number}/${number}/${number}`;

const length = 700;
const topMargin = 60;
const minYeah = 2010;
const maxYeah = new Date().getFullYear();
const monthPx = (length - topMargin) / ((maxYeah - minYeah) * 12);

const jobs = Object.entries(data)
  .map(([type, value]) => {
    return value.map((v) => ({
      type,
      ...v,
    }));
  })
  .flat();

function calcLengthFromDate(start: Date, end: Date | "-") {
  const [year, month] = start.split("/").map((v) => Number(v));

  if (year < minYeah || year > maxYeah || month < 0 || month > 12) {
    throw new Error(`Invalid number: ${year}, ${month}`);
  }

  const totalMonths = getTotalMonths(year, month);
  const buttom = totalMonths * monthPx;
  let height;

  if (end !== "-") {
    const [year, month] = end.split("/").map((v) => Number(v));
    const t = getTotalMonths(year, month);

    height = (t - totalMonths) * monthPx;
  } else {
    height = length - topMargin - buttom;
  }

  return {
    buttom,
    height,
  };
}

function getTotalMonths(year: number, month: number) {
  return (year - (minYeah + 1)) * 12 + month;
}
---

<Layout title="Hiroppy's site">
  <MainLayout title="Jobs">
    <div class="relative overflow-auto" style={{ height: `${length}px` }}>
      <div class="flex justify-around text-lg bg-slate-700 z-30 font-semibold">
        <p>Main</p>
        <p>Side</p>
      </div>
      <div
        class="border-gray-400 border-l-2 absolute left-2/4 right-2/4 h-full z-10"
      >
      </div>
      {
        [...Array(maxYeah - minYeah + 1)].map((_, i) => (
          <div
            class="border-gray-600 border-b-2 absolute w-full text-gray-400 text-sm select-none"
            style={{
              bottom: `${getTotalMonths(minYeah + i + 1, 1) * monthPx}px`,
            }}
          >
            <span class="hidden md:block">{minYeah + i + 1}</span>
          </div>
        ))
      }
      {
        jobs.map(({ name, type, start, end, level = 1, comment, position }) => (
          <div
            class={`absolute h-full w-1/2 z-20 ${
              type === "main" ? "" : "translate-x-full"
            }`}
            style={{
              pointerEvents: "none",
            }}
          >
            <div
              class={`absolute h-28 border-2 bg-opacity-60 w-4 ${
                type === "main" ? "right-2  border-r-0" : "border-l-0"
              } ${
                end === "-"
                  ? "border-t-0 border-red-600 text-white font-semibold"
                  : "border-cyan-600 text-gray-300"
              }`}
              style={{
                bottom: `${calcLengthFromDate(start, end).buttom}px`,
                height: `${calcLengthFromDate(start, end).height}px`,
                left: `${type === "main" ? "inherit" : `${level * 16}px`}`,
              }}
            >
              &nbsp;
              <div
                class={`group absolute -top-2 min-w-max cursor-pointer ${
                  type === "main" ? "-translate-x-full pr-4" : `left-4 pl-2`
                }`}
                style={{
                  pointerEvents: "all",
                }}
              >
                <div class="relative">
                  <span>{name}</span>
                  <div class="rounded px-2 py-1 absolute -top-12 -translate-x-1/2 left-1/2 bg-gray-800 opacity-0 group-hover:opacity-100 transition pointer-events-none min-w-max text-sm text-center text-gray-300 font-normal">
                    <p>{`${start} - ${end === "-" ? "" : end}`.trim()}</p>
                    <p>
                      {position}: {comment}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </MainLayout>
</Layout>

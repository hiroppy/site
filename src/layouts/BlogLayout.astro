---
import { writeFile, mkdir } from "node:fs/promises";
import { fileURLToPath } from "node:url";
import { join } from "node:path";
import { formatDate } from "../utils/formatDate";
import Layout from "./Layout.astro";
import ShareButtons from "../components/ShareButtons.astro";
import { getBlogs, parseTags } from "../utils/blog";
import Link from "../components/Link.astro";
import { HATENA_BLOG_ENTRY_URL } from "../constants";
import Badge from "../components/Badge.astro";
import Button from "../components/Button.astro";
import Card from "../components/Card.astro";
import CardContent from "../components/CardContent.astro";
import Avatar from "../components/Avatar.astro";
import Image from "../components/Image.astro";
import Icon from "../components/Icon.astro";
import type { CollectionEntry } from "astro:content";
import type { MarkdownLayoutProps } from "astro";
import { generateOgImage } from "../utils/ogp";

const { frontmatter, headings } = Astro.props as MarkdownLayoutProps<
  CollectionEntry<"blog">["data"]
>;
const date = formatDate(new Date(frontmatter.date));
const indices = headings.filter((heading) => heading.depth < 4);
const diffDate =
  (new Date().getTime() - new Date(frontmatter.date).getTime()) /
  (60 * 60 * 1000 * 24);
const { title, url: tmpUrl, description, tags } = frontmatter;

// TODO: url„Åå„Éï„Ç°„Ç§„É´„Éë„Çπ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Éê„Ç∞„Åå„ÅÇ„Çã
const url = tmpUrl?.replace(".mdx", "").replace(/.+?\/content/, "");

// HMR„ÅßÈáç„Åè„Å™„Çã„Åü„ÇÅ„ÄÅdevÁí∞Â¢É„Åß„ÅØglob„Çí„Åï„Åõ„Å™„ÅÑ
const posts = import.meta.env.PROD ? await getBlogs() : [];
const index = posts.findIndex(
  ({ slug }) =>
    slug ===
    Astro.url.pathname
      .replace(/\/blog\//, "")
      .replace(/\/$/, "" /* for prod */),
);

const githubUrl = `https://github.com/hiroppy/site/tree/main/src/content/${Astro.url.pathname.replace(
  /(^\/|\/$)/g,
  "",
)}.mdx`;

// Get related posts
const relatedPosts = posts
  .filter(
    (blog) =>
      blog.slug !==
      Astro.url.pathname.replace(/\/blog\//, "").replace(/\/$/, ""),
  )
  .filter((blog) => {
    const currentTags = parseTags(tags);
    const blogTags = parseTags(blog.data.tags);
    return currentTags.some((tag: string) => blogTags.includes(tag));
  })
  .slice(0, 2);

const ogImageFileName = "og.png";
const ogImageDistRelativePath = `../../${url}`;
const ogImageDistAbsolutePath = join(ogImageDistRelativePath, ogImageFileName);

if (import.meta.env.PROD) {
  const buf = await generateOgImage(title, tags.split(","));
  const fileDir = join(fileURLToPath(import.meta.url), ogImageDistRelativePath);

  await mkdir(fileDir, {
    recursive: true,
  });
  await writeFile(join(fileDir, ogImageFileName), new Uint8Array(buf));
}
---

<Layout
  title={title}
  description={description}
  image={ogImageDistAbsolutePath}
  isOptimizedImage={false}
>
  <div
    class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800"
  >
    <main class="container mx-auto max-w-6xl px-4 py-4 md:py-8">
      <!-- Back Button -->
      <div class="mb-4 md:mb-8">
        <a href="/blog">
          <Button
            variant="ghost"
            class="text-blue-600 hover:text-blue-700 dark:text-blue-500 dark:hover:text-blue-400"
          >
            <Icon icon="mdi:arrow-left" class="mr-2" width="16" height="16" />
            „Éñ„É≠„Ç∞‰∏ÄË¶ß„Å´Êàª„Çã
          </Button>
        </a>
      </div>

      <!-- Article Header -->
      <article
        class="overflow-hidden rounded-2xl bg-white shadow-lg dark:bg-slate-800"
      >
        <div class="relative">
          {
            frontmatter.image && (
              <Image
                src={frontmatter.image}
                alt={title}
                width={800}
                height={400}
                class="h-64 w-full object-cover md:h-80"
              />
            )
          }
          {
            !frontmatter.image && (
              <div class="flex h-64 w-full items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600 md:h-80">
                <div class="text-8xl opacity-30">üìù</div>
              </div>
            )
          }
          <div
            class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"
          >
          </div>
          <div class="absolute right-4 bottom-6 left-4 md:right-8 md:left-8">
            <Badge variant="primary" class="mb-4">
              {parseTags(tags)?.[0] || "Ë®ò‰∫ã"}
            </Badge>
            <h1 class="mb-4 text-3xl font-bold text-white md:text-4xl">
              {title}
            </h1>
            <div class="flex items-center space-x-6 text-white/90">
              <div class="flex items-center space-x-2">
                <Icon icon="mdi:calendar" width="16" height="16" />
                <span>{date}</span>
              </div>
            </div>
          </div>
        </div>

        <div class="px-4 py-8 md:px-8">
          <!-- Author Info -->
          <div
            class="mb-8 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between"
          >
            <div class="flex items-center space-x-4">
              <Avatar class="h-12 w-12">
                <Image
                  src="/images/meta/me.png"
                  alt="Hiroppy"
                  class="h-12 w-12 rounded-full"
                />
              </Avatar>
              <div>
                <p class="font-semibold text-gray-900 dark:text-white">
                  Hiroppy
                </p>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  JavaScript Engineer
                </p>
              </div>
            </div>
            <div class="flex flex-wrap items-center gap-2">
              <ShareButtons
                url={`${Astro.site?.origin}${url!}`}
                title={title}
              />
              <Link
                href={githubUrl}
                class="flex items-center"
                ariaLabel="Edit this page on GitHub"
              >
                <Button variant="outline" size="sm" class="px-4 py-1">
                  <Icon icon="mdi:github" class="mr-1" width="14" height="14" />
                  Edit
                </Button>
              </Link>
            </div>
          </div>

          <hr class="mb-8 border-gray-200 dark:border-gray-700" />

          <!-- Table of Contents -->
          {
            indices.length > 0 && (
              <div class="mb-8 rounded-lg bg-gray-50 p-6 dark:bg-slate-700">
                <h2 class="mb-4 font-semibold text-gray-900 dark:text-white">
                  üìñ ÁõÆÊ¨°
                </h2>
                <nav aria-label="Ë®ò‰∫ã„ÅÆÁõÆÊ¨°">
                  <ul class="space-y-1">
                    {indices
                      .filter((h) => h.depth <= 3)
                      .map((heading) => (
                        <li
                          class={
                            heading.depth === 1
                              ? "text-sm font-semibold"
                              : heading.depth === 2
                                ? "ml-4 border-l-2 border-gray-300 pl-3 text-sm dark:border-gray-300"
                                : "ml-8 border-l-2 border-gray-200 pl-3 text-xs dark:border-gray-500"
                          }
                        >
                          <a
                            href={`#${heading.slug}`}
                            class={
                              heading.depth === 1
                                ? "text-gray-900 hover:text-blue-600 dark:text-white dark:hover:text-blue-400"
                                : "text-gray-600 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400"
                            }
                          >
                            {heading.text}
                          </a>
                        </li>
                      ))}
                  </ul>
                </nav>
              </div>
            )
          }

          <!-- Warnings -->
          <div class="mb-8 space-y-4">
            {
              parseTags(tags).includes("javascript") && diffDate > 365 && (
                <div class="rounded-lg border border-yellow-200 bg-yellow-50 p-4 dark:border-yellow-800 dark:bg-yellow-900/20">
                  <div class="flex items-center">
                    <Icon
                      icon="mdi:alert-triangle"
                      class="mr-2 text-yellow-600 dark:text-yellow-400"
                      width="20"
                      height="20"
                    />
                    <span class="text-sm font-medium text-yellow-800 dark:text-yellow-200">
                      üö® „Åì„ÅÆË®ò‰∫ã„ÅØ1Âπ¥‰ª•‰∏äÊõ¥Êñ∞„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì
                    </span>
                  </div>
                </div>
              )
            }
            {
              frontmatter.hatenaPath && (
                <div class="rounded-lg border border-blue-200 bg-blue-50 p-4 dark:border-blue-800 dark:bg-blue-900/20">
                  <div class="flex items-center">
                    <Icon
                      icon="mdi:check-circle"
                      class="mr-2 text-blue-600 dark:text-blue-400"
                      width="20"
                      height="20"
                    />
                    <span class="text-sm text-blue-800 dark:text-blue-200">
                      üíÅ‚Äç‚ôÄÔ∏è „Åì„ÅÆË®ò‰∫ã„ÅØ{" "}
                      <Link
                        href={`${HATENA_BLOG_ENTRY_URL}/${frontmatter.hatenaPath}`}
                        class="underline"
                      >
                        Hatena Blog
                      </Link>{" "}
                      „Åã„Çâ„ÅÆÁßªË°åË®ò‰∫ã„Åß„Åô
                    </span>
                  </div>
                </div>
              )
            }
          </div>

          <!-- Article Content -->
          <div class="prose prose-lg dark:prose-invert max-w-none">
            <slot />
          </div>

          <hr class="my-8 border-gray-200 dark:border-gray-700" />

          <!-- Tags -->
          <div class="mb-8 space-y-4">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white">
              üè∑Ô∏è „Çø„Ç∞
            </h2>
            <div class="flex flex-wrap gap-2">
              {
                parseTags(tags).map((tag: string) => (
                  <Badge variant="secondary" class="px-3 py-1.5 text-sm">
                    <a
                      href={`/blog/tags/${tag}`}
                      aria-label={`${tag}„Çø„Ç∞„ÅÆË®ò‰∫ã„ÇíË°®Á§∫`}
                    >
                      {tag}
                    </a>
                  </Badge>
                ))
              }
            </div>

            <div
              class="flex flex-col items-center gap-4 sm:flex-row sm:justify-center"
            >
              <ShareButtons
                url={`${Astro.site?.origin}${url!}`}
                title={title}
              />
            </div>
          </div>

          <!-- Pagination -->
          {
            index !== -1 && (
              <div class="mb-8">
                <h2 class="mb-4 text-lg font-semibold text-gray-900 dark:text-white">
                  üìö ÂâçÂæå„ÅÆË®ò‰∫ã
                </h2>
                <div class="grid gap-4 md:grid-cols-2">
                  {index !== 0 ? (
                    <Card class="group transition-all duration-300 hover:shadow-lg dark:bg-slate-700">
                      <CardContent class="p-4">
                        <div class="mb-2 text-xs text-gray-500 dark:text-gray-400">
                          ‚Üê Ââç„ÅÆË®ò‰∫ã
                        </div>
                        <h3 class="line-clamp-2 text-sm font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-gray-300 dark:group-hover:text-blue-500">
                          <a
                            href={`/blog/${posts[index - 1].slug}`}
                            aria-label={`Ââç„ÅÆË®ò‰∫ã: ${posts[index - 1].data.title}`}
                          >
                            {posts[index - 1].data.title}
                          </a>
                        </h3>
                      </CardContent>
                    </Card>
                  ) : (
                    <div />
                  )}
                  {index !== posts.length - 1 ? (
                    <Card class="group transition-all duration-300 hover:shadow-lg dark:bg-slate-700">
                      <CardContent class="p-4 text-right">
                        <div class="mb-2 text-xs text-gray-500 dark:text-gray-400">
                          Ê¨°„ÅÆË®ò‰∫ã ‚Üí
                        </div>
                        <h3 class="line-clamp-2 text-sm font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-gray-300 dark:group-hover:text-blue-500">
                          <a
                            href={`/blog/${posts[index + 1].slug}`}
                            aria-label={`Ê¨°„ÅÆË®ò‰∫ã: ${posts[index + 1].data.title}`}
                          >
                            {posts[index + 1].data.title}
                          </a>
                        </h3>
                      </CardContent>
                    </Card>
                  ) : (
                    <div />
                  )}
                </div>
              </div>
            )
          }
        </div>
      </article>

      <!-- Related Posts -->
      {
        relatedPosts.length > 0 && (
          <section class="mt-12">
            <h2 class="mb-6 text-2xl font-bold text-gray-900 dark:text-white">
              Èñ¢ÈÄ£Ë®ò‰∫ã
            </h2>
            <div class="grid gap-6 md:grid-cols-2">
              {relatedPosts.map((post) => (
                <Card class="group transition-all duration-300 hover:shadow-lg dark:bg-slate-800">
                  <CardContent class="p-0">
                    <div class="flex">
                      {post.data.image && (
                        <Image
                          src={post.data.image}
                          alt={post.data.title}
                          width={120}
                          height={80}
                          class="h-20 w-24 rounded-l-lg object-cover"
                        />
                      )}
                      {!post.data.image && (
                        <div class="flex h-20 w-24 items-center justify-center rounded-l-lg bg-gradient-to-br from-blue-50 to-purple-50 dark:from-gray-700 dark:to-gray-600">
                          <div class="text-2xl opacity-30">üìù</div>
                        </div>
                      )}
                      <div class="flex-1 p-4">
                        <Badge variant="secondary" class="mb-2 text-xs">
                          {parseTags(post.data.tags)?.[0] || "Ë®ò‰∫ã"}
                        </Badge>
                        <h3 class="line-clamp-2 text-sm font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-gray-300 dark:group-hover:text-blue-500">
                          <a
                            href={`/blog/${post.slug}`}
                            aria-label={`Èñ¢ÈÄ£Ë®ò‰∫ã: ${post.data.title}`}
                          >
                            {post.data.title}
                          </a>
                        </h3>
                        <p class="mt-2 text-xs text-gray-500 dark:text-gray-400">
                          {formatDate(post.data.date)}
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </section>
        )
      }
    </main>
  </div>
</Layout>

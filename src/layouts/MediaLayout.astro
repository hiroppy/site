---
import Layout from "./Layout.astro";
import Button from "../components/Button.astro";
import Link from "../components/Link.astro";
import type { MediaType } from "../constants";

type Path = "" | `/${MediaType}`;

// buildのときだけ、/が最後につく
const currentPath = Astro.url.pathname.replace("/media", "").replace(/\/$/, "");
const kinds: Record<Path, string> = {
  "": "/media",
  // @ts-expect-error
  "/articles": "/media/articles",
  "/talks": "/media/talks",
  "/podcasts": "/media/podcasts",
};

const getKindLabel = (kind: string): string => {
  switch (kind) {
    case "":
      return "すべて";
    case "/articles":
      return "記事";
    case "/talks":
      return "登壇";
    case "/podcasts":
      return "ポッドキャスト";
    default:
      return kind.replace(/^\//, "");
  }
};

const getDescription = (): string => {
  switch (currentPath) {
    case "":
      return "登壇・プレス・ポッドキャストなどのメディア活動を紹介";
    case "/articles":
      return "プレスや外部記事のまとめ";
    case "/talks":
      return "カンファレンスやイベントでの登壇資料のまとめ";
    case "/podcasts":
      return "Mozaic.fmをはじめとしたポッドキャスト出演のまとめ";
    default:
      return "メディア活動をまとめています";
  }
};
---

<Layout
  title={`Media / ${currentPath === "" ? "all" : currentPath.replace("/", "")}`}
  description={getDescription()}
>
  <div
    class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800"
  >
    <main class="container mx-auto px-4 py-8">
      <!-- Page Header -->
      <div class="py-6 text-center">
        <h1 class="mb-4 text-4xl font-bold text-gray-900 dark:text-white">
          Media & Activities
        </h1>
      </div>

      <!-- Filter Tabs (Sticky) -->
      <div
        class="sticky top-20 z-40 mb-8 flex justify-center py-4 backdrop-blur-lg dark:bg-slate-900/60"
      >
        <div
          class="flex flex-wrap gap-2 rounded-lg bg-white p-2 shadow-md dark:bg-slate-800"
        >
          {
            Object.entries(kinds).map(([kind, href]) => (
              <Link
                href={href}
                ariaLabel={`${getKindLabel(kind)}のメディア活動を表示`}
              >
                <Button
                  variant={currentPath === kind ? "default" : "ghost"}
                  size="sm"
                  class={`${
                    currentPath === kind
                      ? "bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-400"
                      : "text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100"
                  }`}
                >
                  {getKindLabel(kind)}
                </Button>
              </Link>
            ))
          }
        </div>
      </div>

      <!-- Content -->
      <slot />
    </main>
  </div>
</Layout>

---
import { ClientRouter } from "astro:transitions";
import Footer from "../components/Footer.astro";
import GA from "../components/GA.astro";
import Header from "../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../constants";
import meImage from "../assets/images/meta/me.png";
import { importAssets, getImageSrc } from "../utils/importAssets";
import "../global.css";

type Props = {
  title?: string;
  description?: string;
  image?: string;
  isOptimizedImage?: boolean;
  showHeader?: boolean;
  showFooter?: boolean;
  headerVariant?: "default" | "fullscreen";
  fullscreen?: boolean;
};

const {
  title,
  description,
  image,
  isOptimizedImage = true,
  showHeader = true,
  showFooter = true,
  headerVariant = "default",
  fullscreen = false,
} = Astro.props;

// fullscreenの場合は関連するpropsを上書き
const finalShowHeader = fullscreen ? true : showHeader;
const finalShowFooter = fullscreen ? false : showFooter;
const finalHeaderVariant = fullscreen ? "fullscreen" : headerVariant;
const pageTitle = title ?? Astro.url.pathname.replace(/^\/|\/$/g, "");
const siteDescription = description ?? SITE_DESCRIPTION;
const ogImage = new URL(
  image
    ? isOptimizedImage
      ? getImageSrc(await importAssets(image))
      : image
    : meImage.src,
  Astro.site?.origin as string,
);

const url = new URL(Astro.url.pathname, Astro.site);
const titleContent =
  pageTitle === "" ? SITE_TITLE : `${pageTitle} - ${SITE_TITLE}`;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, user-scalable=no"
    />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={siteDescription} />
    <meta property="theme-color" content="#3498db" />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content={SITE_TITLE} />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={titleContent} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:image" content={ogImage} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@about_hiroppy" />
    <meta
      name="google-site-verification"
      content="5oxyYILHYb_TUbxn5n1vZlDDEj2K8BTQhwMqJnEX8CA"
    />
    <title>{titleContent}</title>
    <link rel="icon" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={url} />
    <link rel="dns-prefetch" href="//www.googletagmanager.com" />
    <link rel="preconnect" href="//www.googletagmanager.com" />
    <link rel="dns-prefetch" href="//api.github.com" />
    <link rel="preconnect" href="//api.github.com" />
    <link rel="dns-prefetch" href="//b.hatena.ne.jp" />
    <link rel="preconnect" href="//b.hatena.ne.jp" />
    <link rel="author" href="http://www.hatena.ne.jp/about_hiroppy/" />
    <script is:inline>
      (function () {
        const theme = (() => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          }
          return "light";
        })();

        if (theme === "light") {
          document.documentElement.classList.remove("dark");
        } else {
          document.documentElement.classList.add("dark");
        }

        if (typeof localStorage !== "undefined") {
          localStorage.setItem("theme", theme);
        }
      })();
    </script>
    <ClientRouter fallback="swap" />
  </head>
  <body
    class="font-body min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800"
  >
    {finalShowHeader && <Header variant={finalHeaderVariant} />}
    {/*TODO: 全ページこっちにmargin寄せる */}
    <slot />
    {finalShowFooter && <Footer />}
    {import.meta.env.PROD && <GA />}
  </body>
</html>
